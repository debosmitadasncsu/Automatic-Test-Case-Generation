var mystery = require('./mystery.js')
var mock = require('mock-fs');
mystery.inc(-101,77);
mystery.inc(-101,77);
mystery.inc(-101,77);
mystery.inc(-101,"");
mystery.inc(-99,77);
mystery.inc(-99,77);
mystery.inc(-99,77);
mystery.inc(-99,"");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,'bob');
mystery.weird(88,69,41,"stricter");
mystery.weird(88,69,41,"");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,'bob');
mystery.weird(88,69,43,"stricter");
mystery.weird(88,69,43,"");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,'bob');
mystery.weird(88,69,41,"stricter");
mystery.weird(88,69,41,"");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,'bob');
mystery.weird(88,69,43,"stricter");
mystery.weird(88,69,43,"");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,'bob');
mystery.weird(88,71,41,"stricter");
mystery.weird(88,71,41,"");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,'bob');
mystery.weird(88,71,43,"stricter");
mystery.weird(88,71,43,"");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,'bob');
mystery.weird(88,71,41,"stricter");
mystery.weird(88,71,41,"");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,'bob');
mystery.weird(88,71,43,"stricter");
mystery.weird(88,71,43,"");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,'bob');
mystery.weird(88,69,41,"stricter");
mystery.weird(88,69,41,"");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,'bob');
mystery.weird(88,69,43,"stricter");
mystery.weird(88,69,43,"");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,"strictly");
mystery.weird(88,69,41,'bob');
mystery.weird(88,69,41,"stricter");
mystery.weird(88,69,41,"");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,"strictly");
mystery.weird(88,69,43,'bob');
mystery.weird(88,69,43,"stricter");
mystery.weird(88,69,43,"");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,'bob');
mystery.weird(88,71,41,"stricter");
mystery.weird(88,71,41,"");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,'bob');
mystery.weird(88,71,43,"stricter");
mystery.weird(88,71,43,"");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,"strictly");
mystery.weird(88,71,41,'bob');
mystery.weird(88,71,41,"stricter");
mystery.weird(88,71,41,"");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,"strictly");
mystery.weird(88,71,43,'bob');
mystery.weird(88,71,43,"stricter");
mystery.weird(88,71,43,"");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,'bob');
mystery.weird(86,69,41,"stricter");
mystery.weird(86,69,41,"");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,'bob');
mystery.weird(86,69,43,"stricter");
mystery.weird(86,69,43,"");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,'bob');
mystery.weird(86,69,41,"stricter");
mystery.weird(86,69,41,"");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,'bob');
mystery.weird(86,69,43,"stricter");
mystery.weird(86,69,43,"");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,'bob');
mystery.weird(86,71,41,"stricter");
mystery.weird(86,71,41,"");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,'bob');
mystery.weird(86,71,43,"stricter");
mystery.weird(86,71,43,"");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,'bob');
mystery.weird(86,71,41,"stricter");
mystery.weird(86,71,41,"");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,'bob');
mystery.weird(86,71,43,"stricter");
mystery.weird(86,71,43,"");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,'bob');
mystery.weird(86,69,41,"stricter");
mystery.weird(86,69,41,"");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,'bob');
mystery.weird(86,69,43,"stricter");
mystery.weird(86,69,43,"");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,"strictly");
mystery.weird(86,69,41,'bob');
mystery.weird(86,69,41,"stricter");
mystery.weird(86,69,41,"");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,"strictly");
mystery.weird(86,69,43,'bob');
mystery.weird(86,69,43,"stricter");
mystery.weird(86,69,43,"");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,'bob');
mystery.weird(86,71,41,"stricter");
mystery.weird(86,71,41,"");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,'bob');
mystery.weird(86,71,43,"stricter");
mystery.weird(86,71,43,"");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,"strictly");
mystery.weird(86,71,41,'bob');
mystery.weird(86,71,41,"stricter");
mystery.weird(86,71,41,"");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,"strictly");
mystery.weird(86,71,43,'bob');
mystery.weird(86,71,43,"stricter");
mystery.weird(86,71,43,"");
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file2.txt','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{},"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"pathContent":{"file1.txt":"text content","file2.txt":""}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({"path/fileExists":{"file1.txt":"text from file1"},"path/emptyDir":{}});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mock({});
	mystery.fileTest('pathContent/file1.txt','path/fileExists','pathContent/file1.txt','path/emptyDir','pathContent/file2.txt','path/fileExists','pathContent/file2.txt','path/emptyDir','pathContent/file1','path/fileExists','pathContent/file1','path/emptyDir');
mock.restore();
mystery.normalize("387-300-3648");
mystery.normalize("122-691-0206");
mystery.format("025-178-3148","NNNNNNNNNN",{normalize:true});
mystery.format("025-178-3148","NNNNNNNNNN",null);
mystery.format("025-178-3148","NNNNNNNNNN",{normalize:true});
mystery.format("025-178-3148","NNNNNNNNNN",null);
mystery.format("998-573-4600","NNNNNNNNNN",{normalize:true});
mystery.format("998-573-4600","NNNNNNNNNN",null);
mystery.format("998-573-4600","NNNNNNNNNN",{normalize:true});
mystery.format("998-573-4600","NNNNNNNNNN",null);
mystery.format("727-427-7158","NNNNNNNNNN",{normalize:true});
mystery.format("727-427-7158","NNNNNNNNNN",null);
mystery.format("727-427-7158","NNNNNNNNNN",{normalize:true});
mystery.format("727-427-7158","NNNNNNNNNN",null);
mystery.format("776-009-1536","NNNNNNNNNN",{normalize:true});
mystery.format("776-009-1536","NNNNNNNNNN",null);
mystery.format("776-009-1536","NNNNNNNNNN",{normalize:true});
mystery.format("776-009-1536","NNNNNNNNNN",null);
mystery.format("932-783-0338","NNNNNNNNNN",{normalize:true});
mystery.format("932-783-0338","NNNNNNNNNN",null);
mystery.format("932-783-0338","NNNNNNNNNN",{normalize:true});
mystery.format("932-783-0338","NNNNNNNNNN",null);
mystery.format("380-725-7319","NNNNNNNNNN",{normalize:true});
mystery.format("380-725-7319","NNNNNNNNNN",null);
mystery.format("380-725-7319","NNNNNNNNNN",{normalize:true});
mystery.format("380-725-7319","NNNNNNNNNN",null);
mystery.blackListNumber("357-646-9197");
mystery.blackListNumber("9191230456");
